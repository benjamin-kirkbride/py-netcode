[build-system]
requires = ["setuptools", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "netcode"
version = "0.0.1"
requires-python = ">=3.11"


dependencies = [
    "PyNaCl==1.5.0",
    "pydantic==2.8.2",
]

[project.optional-dependencies]

dev = [
    "coverage",
    "pytest==8.0.2", # https://github.com/Zac-HD/hypofuzz/issues/35
    "pytest-sugar",
    "mypy>=1.10.1",
    "black==24.8.0",
    "ruff==0.5.7",
    "pytest-xdist==3.6.1",
    "pytest-cov==5.0.0",
    "hypothesis[cli]",
    "hypofuzz",
    "pudb==2024.1.2",
    "snakeviz==2.2.0",
    "viztracer",
    "faster-fifo==1.4.7",
    "pytest-xdist==3.6.1",
    "bitstring==4.2.3",
    "pytest-pudb==0.7.0",
]

[tool.ruff]
ignore = [
    "DJ", # flake8-django
    "ANN", # flake8-annotations - leave these to mypy
    "TCH010", # leave type annotation enforcement to the proffesionals
    "PD", # pandas-vet - we don't use pandas
    "NPY", # NumPy-specific rules - we don't use numpy
    "AIR", # Airflow - we don't use apache airflow
    "S101", # Use of assert detected - I use assert for typing and testing
    "G004", # logging-f-string - I want to use fstrings for logs, I don't care about the consequences
    "COM812", # https://github.com/astral-sh/ruff/issues/6525
    "D105", # Missing docstring in magic method
]
select = ["ALL"]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = [
    "D103", # Missing docstring in public function
    "SLF001", # Private member accessed
]

[tool.mypy]
python_version = "3.11"
explicit_package_bases = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = "tests.*"

disallow_untyped_defs = false

[tool.setuptools]
packages = ["netcode", "tests"]

[tool.pytest.ini_options]
python_files = ["test_*.py", "benchmark_*.py"]
python_classes = ["Test*", "*Benchmark"]
python_functions = ["test_*", "benchmark_*"]
# log_level = "INFO"

testpaths = ["tests"]